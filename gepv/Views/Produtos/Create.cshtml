@model gepv.Models.Produtos
@using gepv.Models


@{
    ApplicationDbContext db = new ApplicationDbContext();
    ViewBag.Title = "Create";
}

<h6 class="element-header">
    Adicionar Novo Produto
</h6>

<div class="element-content">
    <div class="row">
        <div class="col-sm-6 col-xxxl-3">
            <a class="element-box el-tablo" href="/Produtos/Index">
                <div class="label">
                Todos os Produtos
                </div>
                <div class="value">
                    @db.Produtos.Count()
                </div>
               
            </a>
        </div>
        <div class="col-sm-6 col-xxxl-3">
            <a class="element-box el-tablo" href="/Saidas/Index">
                <div class="label">
                    Vendas
                </div>
                <div class="value">

                    @db.Saidas.Count()
                </div>
                
            </a>
        </div>

    </div>
</div>

@using (Html.BeginForm(Html.BeginForm("Create", "Produtos", FormMethod.Post,
                            new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    <div class="element-box">

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control rounded bright" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control rounded bright" } })
                    @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Preco, new { htmlAttributes = new { @class = "form-control rounded bright" } })
                    @Html.ValidationMessageFor(model => model.Preco, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="Categoria" name="Categoria" class = "form-control rounded bright">
                        @foreach (var i in db.Categorias)
                        {
                        <option class="group-option" value="@i.Id">@i.Nome</option>
                        }
                    </select>
                    <a href="/Categorias/Create">Nova Categoria</a>
                    @Html.ValidationMessageFor(model => model.Categoria, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control rounded bright" type="file"  name="file" id="file"/>
                    @Html.ValidationMessageFor(model => model.Imagem, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Cadastrar" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
