@model gepv.Models.Saida
@using gepv.Models

@{
    ApplicationDbContext db = new ApplicationDbContext();
    ViewBag.Title = "Create";
}

<p class="text-error">@ViewBag.Erro</p>
<h6 class="element-header">
    Venda Rápida
</h6>

<div class="element-content">
    <div class="row">
        <div class="col-sm-12 col-xxxl-3">
            <a class="element-box el-tablo" href="/Saidas/Index">
                <div class="label">
                    Todas as Vendas
                </div>
                <div class="value">
                    @db.Saidas.Count()
                </div>

            </a>
        </div>
    </div>
</div>
<div class="element-box">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />

            <div class="form-group">
                @Html.LabelFor(model => model.Cliente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="Cliente" name="Cliente" class="form-control rounded bright">
                        @foreach (var i in db.Clientes)
                        {
                            <option class="group-option" value="@i.Id">@i.Nome</option>
                        }
                    </select>
                    <a href="/Clientes/Create">Novo Cliente</a>
                    @Html.ValidationMessageFor(model => model.Cliente, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Produto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="Produto" name="Produto" class="form-control rounded bright">
                        @foreach (var i in db.Produtos.Where(x => x.Quantidade > 0))
                        {
                            <option class="group-option" value="@i.Id">@i.Nome (Quantidade:"@i.Quantidade")</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.Produto, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label col-md-2 " })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control rounded brigh" } })
                    @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Efectuar Venda" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
</div>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
